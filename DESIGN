A Customer can be associated with many Shopping Carts.
A Preferred Customer is a Subtype of Customer.
A Preferred Customer can be associated with many Credit Cards.
A Credit Card can be associated with one, and only one, Preferred Customer.
A Shopping Cart can be associated with one, and only one, Credit Card.
A Shopping Cart can be associated with many Items to Purchase.
An Item to Purchase can be associated with one and only one Product.
A Product can be associated with many Items to Purchase.


Domain is a body of business expertise. For example, you might have a domain of all business expertise about customers -- who is responsible for them, what prices they should get, how to contact them, etc.
Entity is an object which has a distinct identity. For example, a Customer entity has a distinct identity with an ID.
Value Object is an object which has no distinct identity. For example, the color of a product does not have a distinct identity if you think the "blue" of two blue shirts are the same thing.
Aggregate is a higher level entity which could be viewed from the outside and in turn links you to other entities and value objects. For example, Customer might be an aggregate, so you can view Customer from Orders, Invoices, etc., but a Customer's addresses and phone numbers should only be retrieved by going through Customer first.
Infrastructure is where the lower level infrastructure of your application is available. For example, it would provide you with the ability to access databases, remote web services, etc.
Factory is used to create Entities. For example, a Factory might create an Invoice entity (and its related entities and value objects) from an Order entity.
Repository is used to retrieve, store, and delete Entities from the database. For example, a Repository might help you store the Invoice (and related entities) your Factory created and then bring them back from the database.
Service is business logic that involves several domain Entities or Aggregates. For example, creating Invoices from Orders is a service.

Hibernate: create table ACCOUNTS (id bigint generated by default as identity (start with 1), cardExpireDate varchar(255), cardNumber varchar(255), customer_id bigint, primary key (id))
Hibernate: create table ADDRESSES (id bigint generated by default as identity (start with 1), address varchar(255), city varchar(255), customer_id bigint, primary key (id))
Hibernate: create table CARTITEMS (id bigint generated by default as identity (start with 1), quantity bigint, cart_id bigint, product_id bigint, primary key (id))
Hibernate: create table CARTS (id bigint generated by default as identity (start with 1), primary key (id))
Hibernate: create table CUSTOMERS (id bigint generated by default as identity (start with 1), email varchar(255), name varchar(255), cart_id bigint, primary key (id), unique (email))
Hibernate: create table ORDERITEMS (id bigint generated by default as identity (start with 1), quantity bigint, order_id bigint, product_id bigint, primary key (id))
Hibernate: create table ORDERS (id bigint generated by default as identity (start with 1), orderDate timestamp, shipAddress varchar(255), shipDate timestamp, totalMoney double, customer_id bigint, primary key (id))
Hibernate: create table PRODUCTS (id bigint generated by default as identity (start with 1), createdDate timestamp, description varchar(255), image varchar(255), name varchar(255), salePrice double, unitPrice double, primary key (id), unique (name))
Hibernate: alter table ACCOUNTS add constraint FKAF43ABE6E2BEAF74 foreign key (customer_id) references CUSTOMERS
Hibernate: alter table ADDRESSES add constraint FKDA388B82E2BEAF74 foreign key (customer_id) references CUSTOMERS
Hibernate: alter table CARTITEMS add constraint FKB3577080C4DC11EA foreign key (cart_id) references CARTS
Hibernate: alter table CARTITEMS add constraint FKB3577080A16F9A05 foreign key (product_id) references PRODUCTS
Hibernate: alter table CUSTOMERS add constraint FK6268C35C4DC11EA foreign key (cart_id) references CARTS
Hibernate: alter table ORDERITEMS add constraint FK4A8CAD32208018CA foreign key (order_id) references ORDERS
Hibernate: alter table ORDERITEMS add constraint FK4A8CAD32A16F9A05 foreign key (product_id) references PRODUCTS
Hibernate: alter table ORDERS add constraint FK8B7256E5E2BEAF74 foreign key (customer_id) references CUSTOMERS